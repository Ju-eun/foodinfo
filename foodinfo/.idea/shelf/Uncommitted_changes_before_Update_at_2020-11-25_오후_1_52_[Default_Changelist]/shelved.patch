Index: app/src/main/java/com/project/foodinfo/Sign/SignActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project.foodinfo.Sign;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentManager;\r\nimport androidx.fragment.app.FragmentTransaction;\r\n\r\nimport android.app.AlertDialog;\r\nimport android.app.DatePickerDialog;\r\nimport android.app.Dialog;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.text.TextUtils;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.Button;\r\nimport android.widget.CheckBox;\r\nimport android.widget.CompoundButton;\r\nimport android.widget.DatePicker;\r\nimport android.widget.EditText;\r\nimport android.widget.ScrollView;\r\nimport android.widget.Spinner;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.AuthResult;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.project.foodinfo.MemInfo;\r\nimport com.project.foodinfo.R;\r\n\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Calendar;\r\nimport java.util.Date;\r\nimport java.util.Locale;\r\nimport java.util.regex.Matcher;\r\nimport java.util.regex.Pattern;\r\n\r\npublic class SignActivity extends AppCompatActivity {\r\n\r\n    String[] names = {\"@naver.com\", \"@kakao.com\", \"@hanmail.net\", \"@gmail.com\"};\r\n    String store_name = null;\r\n    String store_opentime = null;\r\n    String store_closetime = null;\r\n    String store_memo = null;\r\n    String store_category = null;\r\n    public static final String DATE_FORMAT_1 = \"yyyy-MM-dd\";\r\n    EditText et_name;\r\n    EditText et_id;\r\n    EditText et_pw;\r\n    EditText et_pwcheck;\r\n    EditText et_email;\r\n    CheckBox cb_oper;\r\n    Button btn_idcheck;\r\n    Button btn_signup;\r\n\r\n    TextView b_tv;\r\n\r\n    EditText f_pn;\r\n    EditText m_pn;\r\n    EditText e_pn;\r\n\r\n\r\n    View fragment_view;\r\n    SignFragment signFragment;\r\n    TextView datePicker;\r\n\r\n\r\n    String select_spinner = \"\";\r\n\r\n\r\n    public static boolean check = false;\r\n\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_signup);\r\n\r\n        LayoutInflater inflater = this.getLayoutInflater();\r\n        fragment_view = inflater.inflate(R.layout.fragment_sign, null);\r\n\r\n\r\n//        Button btn_oper_picture = (Button) findViewById(R.id.btn_oper_picture);\r\n        et_id = (EditText) findViewById(R.id.id);\r\n        et_name = (EditText) findViewById(R.id.et_name);\r\n        et_email = (EditText) findViewById(R.id.et_email);\r\n        et_pw = (EditText) findViewById(R.id.et_pw);\r\n        et_pwcheck = (EditText) findViewById(R.id.et_pwcheck);\r\n        cb_oper = (CheckBox) findViewById(R.id.sign_frag_cb_oper);\r\n\r\n        btn_idcheck = (Button) findViewById(R.id.btn_idcheck);\r\n        btn_signup = (Button) findViewById(R.id.btn_signUp);\r\n        datePicker = (TextView) findViewById(R.id.sign_tv_yy_mm_dd);\r\n\r\n        b_tv = (TextView) findViewById(R.id.sign_tv_yy_mm_dd);\r\n        f_pn = (EditText) findViewById(R.id.et_phone1);\r\n        m_pn = (EditText) findViewById(R.id.et_phone2);\r\n        e_pn = (EditText) findViewById(R.id.et_phone3);\r\n\r\n        btn_signup.setOnClickListener(sign_mlistener);\r\n        btn_idcheck.setOnClickListener(sign_mlistener);\r\n\r\n\r\n\r\n\r\n        datePicker.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Calendar c = Calendar.getInstance();\r\n\r\n                DatePickerDialog datePickerDialog = new DatePickerDialog(SignActivity.this, android.R.style.Theme_Holo_Light_Dialog_MinWidth, new DatePickerDialog.OnDateSetListener() {\r\n                    @Override\r\n                    public void onDateSet(DatePicker view, int year, int monthOfYear, int dayOfMonth) {\r\n                        // TODO Auto-generated method stub\r\n                        try {\r\n                            SimpleDateFormat format = new SimpleDateFormat(DATE_FORMAT_1);\r\n                            Date de = format.parse(year + \"-\" + (monthOfYear + 1) + \"-\" + dayOfMonth);\r\n                            String de_string = format.format(de);\r\n                            datePicker.setText(de_string);\r\n                        } catch (Exception e) {\r\n                            // TODO: handle exception\r\n                            e.printStackTrace();\r\n                        }\r\n                    }\r\n                },c.get(Calendar.YEAR), c.get(Calendar.MONTH), c.get(Calendar.DAY_OF_MONTH));\r\n                datePickerDialog.getDatePicker().setCalendarViewShown(false);\r\n                datePickerDialog.getWindow().setBackgroundDrawableResource(android.R.color.transparent);\r\n                datePickerDialog.show();\r\n            }\r\n        });\r\n\r\n\r\n        final Spinner spinner = (Spinner) findViewById(R.id.spinner);\r\n        ArrayAdapter<String> adapter = new ArrayAdapter<String>(\r\n                this,\r\n                android.R.layout.simple_spinner_item, names\r\n        );\r\n        spinner.setAdapter(adapter);\r\n        spinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {\r\n                Toast.makeText(getApplicationContext(), \"선택된 아이템 :\" + names[position], Toast.LENGTH_SHORT).show();\r\n                select_spinner = names[position];\r\n            }\r\n\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> parent) {\r\n\r\n            }\r\n        });\r\n\r\n        final ScrollView scrollView = (ScrollView) findViewById(R.id.scrollView123);\r\n        scrollView.post(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                scrollView.fullScroll(scrollView.FOCUS_DOWN);\r\n            }\r\n        });\r\n\r\n        cb_oper.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {\r\n            @Override\r\n            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {\r\n                signFragment = new SignFragment();\r\n                FragmentManager fm = getSupportFragmentManager();\r\n                FragmentTransaction transaction = fm.beginTransaction();\r\n\r\n                if (isChecked) {\r\n                    transaction.add(R.id.frame, signFragment);\r\n                    transaction.addToBackStack(\"signFragment\");\r\n                    transaction.commit();\r\n                } else {\r\n                    fm.popBackStack(\"signFragment\", fm.POP_BACK_STACK_INCLUSIVE);\r\n                    transaction.remove(signFragment);\r\n                    transaction.commit();\r\n                }\r\n\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    View.OnClickListener sign_mlistener = new View.OnClickListener() {\r\n        @Override\r\n        public void onClick(View v) {\r\n            FirebaseAuth firebaseAuth = FirebaseAuth.getInstance(); //파이어베이스에 접근\r\n            String name = et_id.getText().toString();\r\n            String id = et_name.getText().toString();\r\n            String b_day = b_tv.getText().toString();\r\n            String password = et_pw.getText().toString();\r\n            String email = et_email.getText().toString();\r\n\r\n\r\n            if (v.getId() == R.id.btn_signUp) {\r\n                if (name.isEmpty() || id.isEmpty() || password.isEmpty() || email.isEmpty()) { //id ,name ,password, email 공백 체크\r\n                    AlertDialog.Builder builder = new AlertDialog.Builder(SignActivity.this);\r\n\r\n                    builder.setTitle(\"값이 없어\").setMessage(\"용용 죽겠지.\");\r\n\r\n                    builder.setPositiveButton(\"OK\", new DialogInterface.OnClickListener() {\r\n                        @Override\r\n                        public void onClick(DialogInterface dialog, int id) {\r\n                            Toast.makeText(getApplicationContext(), \"OK Click\", Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    });\r\n\r\n                    builder.setNegativeButton(\"Cancel\", new DialogInterface.OnClickListener() {\r\n                        @Override\r\n                        public void onClick(DialogInterface dialog, int id) {\r\n                            Toast.makeText(getApplicationContext(), \"Cancel Click\", Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    });\r\n                    AlertDialog alertDialog = builder.create();\r\n                    alertDialog.show();\r\n                } else if (isValidEmail(email)) {\r\n                    AlertDialog.Builder builder = new AlertDialog.Builder(SignActivity.this);\r\n\r\n                    builder.setTitle(\"이게 이메일이라고 만든거니?\").setMessage(\"용용 죽겠지.\");\r\n\r\n                    builder.setPositiveButton(\"OK\", new DialogInterface.OnClickListener() {\r\n                        @Override\r\n                        public void onClick(DialogInterface dialog, int id) {\r\n                            Toast.makeText(getApplicationContext(), \"OK Click\", Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    });\r\n\r\n                    builder.setNegativeButton(\"Cancel\", new DialogInterface.OnClickListener() {\r\n                        @Override\r\n                        public void onClick(DialogInterface dialog, int id) {\r\n                            Toast.makeText(getApplicationContext(), \"Cancel Click\", Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    });\r\n                    AlertDialog alertDialog = builder.create();\r\n                    alertDialog.show();\r\n                } else if (isValidPasswd(password)) {\r\n                    AlertDialog.Builder builder = new AlertDialog.Builder(SignActivity.this);\r\n\r\n                    builder.setTitle(\"비밀번호 재대로 입력하세요!\").setMessage(\"용용 죽겠지.\");\r\n\r\n                    builder.setPositiveButton(\"OK\", new DialogInterface.OnClickListener() {\r\n                        @Override\r\n                        public void onClick(DialogInterface dialog, int id) {\r\n                            Toast.makeText(getApplicationContext(), \"OK Click\", Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    });\r\n\r\n                    builder.setNegativeButton(\"Cancel\", new DialogInterface.OnClickListener() {\r\n                        @Override\r\n                        public void onClick(DialogInterface dialog, int id) {\r\n                            Toast.makeText(getApplicationContext(), \"Cancel Click\", Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    });\r\n                    AlertDialog alertDialog = builder.create();\r\n                    alertDialog.show();\r\n                } else if (et_pw.getText().toString().equals(et_pwcheck.getText().toString())) { // 비밀번호 체크\r\n                    MemInfo minfo = new MemInfo();\r\n\r\n                    minfo.setId(name);\r\n                    minfo.setName(id);\r\n                    minfo.setPassword(password);\r\n                    minfo.setEmail(email + select_spinner);// 스피너 값도 가져와야함\r\n                    minfo.setBirth(b_day);\r\n                    minfo.setPhonenumber(f_pn.getText().toString(),m_pn.getText().toString(),e_pn.getText().toString());\r\n                    Log.d(\"123\", (et_email.getText().toString() + select_spinner).trim());\r\n\r\n                    //프레그먼트 값 가져오기\r\n//                    SignFragment sf = (SignFragment) getSupportFragmentManager().findFragmentById(R.id.frame);\r\n//                    sf.getFragmentValue();\r\n\r\n                    if (cb_oper.isChecked()) {\r\n                        minfo.setCheck_owner(1);\r\n                        minfo.Strore_infoExtends.\r\n//                        minfo.setStore_category(store_category);\r\n//                        minfo.setStore_time(store_opentime + store_closetime);\r\n//                        minfo.setStore_memo(store_memo);\r\n                    } else {\r\n                        minfo.setCheck_owner(0);\r\n                    }\r\n                    if (minfo.blank_Check() == null) {\r\n                        Log.d(\"why?\", minfo.getId() + \"\\n\" + minfo.getName() + \"\\n\" + minfo.getEmail() + \"\\n\" + minfo.getPassword());\r\n                        Toast.makeText(SignActivity.this, minfo.blank_Check() + \" 값이 비어있습니다.\", Toast.LENGTH_SHORT).show();\r\n                    } else {\r\n                        firebaseAuth.createUserWithEmailAndPassword(minfo.getEmail(), minfo.getPassword()).addOnCompleteListener(SignActivity.this, new OnCompleteListener<AuthResult>() {\r\n                            @Override\r\n                            public void onComplete(@NonNull Task<AuthResult> task) {\r\n                                if (task.isSuccessful()) {\r\n                                    final String uid = task.getResult().getUser().getUid();\r\n                                    Log.d(\"why?\", uid);\r\n                                    FirebaseDatabase database = FirebaseDatabase.getInstance();\r\n                                    DatabaseReference myRef = database.getReference(\"moble-foodtruck\").child(\"MemInfo\").child(uid);//토큰 가져와서 넣고\r\n                                    myRef.setValue(minfo);\r\n\r\n                                    Toast.makeText(SignActivity.this, \"회원가입 성공\", Toast.LENGTH_SHORT).show();\r\n\r\n                                } else {\r\n\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                } else {\r\n                    Toast.makeText(SignActivity.this, \"꺼졍\", Toast.LENGTH_SHORT).show();\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(this);\r\n\r\n        builder.setTitle(\"뒤로가기\").setMessage(\"저장된 내용이 삭제됩니다.\");\r\n\r\n        builder.setPositiveButton(\"OK\", new DialogInterface.OnClickListener() {\r\n            @Override\r\n            public void onClick(DialogInterface dialog, int id) {\r\n                finish();\r\n            }\r\n        });\r\n\r\n        builder.setNegativeButton(\"Cancel\", new DialogInterface.OnClickListener() {\r\n            @Override\r\n            public void onClick(DialogInterface dialog, int id) {\r\n\r\n            }\r\n        });\r\n\r\n        AlertDialog alertDialog = builder.create();\r\n        alertDialog.show();\r\n    }\r\n\r\n    public void setFragmentValue(String store_name, String store_opentime, String store_closetime, String store_memo, String store_category) {\r\n        this.store_name = store_name;\r\n        this.store_category = store_category;\r\n        this.store_opentime = store_opentime;\r\n        this.store_closetime = store_closetime;\r\n        this.store_memo = store_memo;\r\n    }\r\n\r\n\r\n    private boolean isValidPasswd(String target) { //비밀번호 형식 검사\r\n        Pattern p = Pattern.compile(\"(^.*(?=.{6,100})(?=.*[0-9])(?=.*[a-zA-Z]).*$)\");\r\n\r\n        Matcher m = p.matcher(target);\r\n        if (m.find() && !target.matches(\".*[ㄱ-ㅎㅏ-ㅣ가-힣]+.*\")) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    private boolean isValidEmail(String target) {// 이메일 형식 검사\r\n        if (target == null || TextUtils.isEmpty(target)) {\r\n            return false;\r\n        } else {\r\n            return android.util.Patterns.EMAIL_ADDRESS.matcher(target).matches();\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/project/foodinfo/Sign/SignActivity.java	(revision 80e8f11d8d46a17a416a19a7f6d37549efc77d03)
+++ app/src/main/java/com/project/foodinfo/Sign/SignActivity.java	(date 1606187664855)
@@ -280,7 +280,7 @@
 
                     if (cb_oper.isChecked()) {
                         minfo.setCheck_owner(1);
-                        minfo.Strore_infoExtends.
+                        //minfo.Strore_infoExtends.
 //                        minfo.setStore_category(store_category);
 //                        minfo.setStore_time(store_opentime + store_closetime);
 //                        minfo.setStore_memo(store_memo);
Index: app/src/main/java/com/project/foodinfo/Fragment_info.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project.foodinfo;\r\n\r\nimport android.os.Bundle;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.EditText;\r\nimport android.widget.ListView;\r\n\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\n\r\n/**\r\n * A simple {@link Fragment} subclass.\r\n * Use the  factory method to\r\n * create an instance of this fragment.\r\n */\r\npublic class Fragment_info extends Fragment {\r\n\r\n    EditText fragment_et_time;\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n\r\n        View view;\r\n\r\n        view = inflater.inflate(R.layout.fragment_info, container, false);\r\n\r\n        fragment_et_time = (EditText) view.findViewById(R.id.fragment_et_time);\r\n\r\n        FirebaseDatabase firebaseDatabase = FirebaseDatabase.getInstance();\r\n        DatabaseReference myRef = firebaseDatabase.getReference(\"moble-foodtruck\").child(\"MemInfo\").child(\"123\");\r\n\r\n        myRef.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                MemInfo m = dataSnapshot.getValue(MemInfo.class);\r\n\r\n                fragment_et_time.setText(m.getTime());\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });\r\n\r\n\r\n\r\n        // Inflate the layout for this fragment\r\n        return view;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/project/foodinfo/Fragment_info.java	(revision 80e8f11d8d46a17a416a19a7f6d37549efc77d03)
+++ app/src/main/java/com/project/foodinfo/Fragment_info.java	(date 1606187894000)
@@ -44,7 +44,7 @@
             public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                 MemInfo m = dataSnapshot.getValue(MemInfo.class);
 
-                fragment_et_time.setText(m.getTime());
+               // fragment_et_time.setText(m.getTime());
             }
 
             @Override
Index: app/src/main/java/com/project/foodinfo/MemInfo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project.foodinfo;\r\n\r\npublic class MemInfo {\r\n\r\n    private String id = \"\";\r\n    private String name = \"\";\r\n    private String email = \"\";\r\n    private String password = \"\";\r\n    private int check_owner = 0;\r\n    private String birth = \"\";\r\n    private String Phonenumber = \"\";\r\n\r\n\r\n    public Store_Info Strore_infoExtend = new Store_Info();\r\n\r\n\r\n    public String blank_Check() {\r\n        String storeblank = null;\r\n\r\n        if (this.id.isEmpty()) {\r\n            return \"id\";\r\n        }\r\n        if (this.name.isEmpty()) {\r\n            return \"name\";\r\n        }\r\n        if (this.email.isEmpty()) {\r\n            return \"email\";\r\n        }\r\n        if (this.password.isEmpty()) {\r\n            return \"password\";\r\n        }\r\n        return \"성공\";\r\n    }\r\n\r\n    public String getId() {\r\n        return id;\r\n    }\r\n\r\n    public void setId(String id) {\r\n        this.id = id;\r\n    }\r\n\r\n    public String getName() {\r\n        return name;\r\n    }\r\n\r\n    public void setName(String name) {\r\n        this.name = name;\r\n    }\r\n\r\n    public String getEmail() {\r\n        return email;\r\n    }\r\n\r\n    public void setEmail(String email) {\r\n        this.email = email;\r\n    }\r\n\r\n    public String getPassword() {\r\n        return password;\r\n    }\r\n\r\n    public void setPassword(String password) {\r\n        this.password = password;\r\n    }\r\n\r\n    public int getCheck_owner() {\r\n        return check_owner;\r\n    }\r\n\r\n    public void setCheck_owner(int check_owner) {\r\n        this.check_owner = check_owner;\r\n    }\r\n\r\n    public String getBirth() {\r\n        return birth;\r\n    }\r\n\r\n    public void setBirth(String birth) {\r\n        this.birth = birth;\r\n    }\r\n\r\n    public String getPhonenumber() {\r\n        return Phonenumber;\r\n    }\r\n\r\n    public void setPhonenumber(String f_pn, String m_pn, String e_pn) {\r\n        Phonenumber = f_pn + \"-\" + m_pn + \"-\" + e_pn;\r\n\r\n    }\r\n}\r\n\r\nclass Store_Info {\r\n    public String store_name = \"\";\r\n    public String store_time = \"\";\r\n    private String store_memo = \"\";\r\n    private String store_category = \"\";\r\n\r\n    public String blank_Store_Check() {\r\n        if (this.store_name.isEmpty()) {\r\n            return \"store_name\";\r\n        }\r\n        if (this.store_category.isEmpty()) {\r\n            return \"store_category\";\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public String getStore_name() {\r\n        return store_name;\r\n    }\r\n\r\n    public void setStore_name(String store_name) {\r\n        this.store_name = store_name;\r\n    }\r\n\r\n    public String getStore_time() {\r\n        return store_time;\r\n    }\r\n\r\n    public void setStore_time(String store_time) {\r\n        this.store_time = store_time;\r\n    }\r\n\r\n    public String getStore_memo() {\r\n        return store_memo;\r\n    }\r\n\r\n    public void setStore_memo(String store_memo) {\r\n        this.store_memo = store_memo;\r\n    }\r\n\r\n    public String getStore_category() {\r\n        return store_category;\r\n    }\r\n//진순 화이팅~!~!~!~!~!!~~!진순바보! 진라면순한맛! 내 장래희망은 진라면! 순한맛!\r\n    public void setStore_category(String store_category) {\r\n        this.store_category = store_category;\r\n    }\r\n\r\n    Store_Menu store_menuExtend[];\r\n}\r\n\r\n\r\nclass Store_Menu {\r\n    private String menu_img = \"\";\r\n    private String menu_name = \"\";\r\n    private String menu_price = \"\";\r\n\r\n\r\n    public void Menuinsert() {\r\n        MemInfo memInfo = new MemInfo();\r\n\r\n        memInfo.Strore_infoExtend.store_menuExtend = new Store_Menu[5];\r\n\r\n        memInfo.Strore_infoExtend.st\r\n    }\r\n\r\n    public String getMenu_img() {\r\n        return menu_img;\r\n    }\r\n\r\n    public void setMenu_img(String menu_img) {\r\n        this.menu_img = menu_img;\r\n    }\r\n\r\n    public String getMenu_name() {\r\n        return menu_name;\r\n    }\r\n\r\n    public void setMenu_name(String menu_name) {\r\n        this.menu_name = menu_name;\r\n    }\r\n\r\n    public String getMenu_price() {\r\n        return menu_price;\r\n    }\r\n\r\n    public void setMenu_price(String menu_price) {\r\n        this.menu_price = menu_price;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/project/foodinfo/MemInfo.java	(revision 80e8f11d8d46a17a416a19a7f6d37549efc77d03)
+++ app/src/main/java/com/project/foodinfo/MemInfo.java	(date 1606117841653)
@@ -153,7 +153,6 @@
 
         memInfo.Strore_infoExtend.store_menuExtend = new Store_Menu[5];
 
-        memInfo.Strore_infoExtend.st
     }
 
     public String getMenu_img() {
